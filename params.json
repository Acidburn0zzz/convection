{
  "name": "Convection",
  "tagline": "A fully generic, modular DSL for AWS CloudFormation",
  "body": "# Convection [![Build Status](https://travis-ci.org/rapid7/convection.svg)](https://travis-ci.org/rapid7/convection)\r\n_A fully generic, modular DSL for AWS CloudFormation_\r\n\r\nThis gem aims to provide a reusable model for AWS CloudFormation in Ruby. It exposes a DSL for template definition, and a simple, decoupled abstraction of a CloudFormation Stack to compile and apply templates.\r\n\r\n## Branches\r\nWe strive to use [Semantic Versioning](http://semver.org) as much as possible for convection.\r\n\r\n### `master`\r\n**NOTE**: The `master` branch is fully supported by the convection maintainers.\r\n\r\nThe latest and greatest code that we intend to release to Rubygems is merged into this branch.\r\nToday that code happens to be part of the `v0.2.x` minor version since we have not deemed convection feature complete (we'll release a `v1.0.0` release at that point).\r\nBackwards incompatible changes until this time *may* be added by bumping the **minor** (not major) version of the project. These will be explicitly called out in the release notes for the version that introduced them and if possible a deprecation message and compatibility will be kept making users aware of a potential the breaking change in the future.\r\n\r\n## Installation\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'convection'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install convection\r\n\r\n## Template DSL\r\nThe core DSL provides all of the available JSON primatives of CloudFormation in the form of ruby methods. These primatives are used to compose higher-order methods for commonly used definitions:\r\n\r\n```ruby\r\nrequire 'convection'\r\n\r\n## Create a new instance of Convection::Model::Template\r\nConvection.template do\r\n  description 'An example template'\r\n\r\n  parameter 'InstanceSize' do\r\n    type 'String'\r\n    description 'Instance Size'\r\n    default 'm3.medium'\r\n\r\n    allow 'm3.medium'\r\n    allow 'm3.large'\r\n    allow 'm3.xlarge'\r\n  end\r\n\r\n  ## The `resource` method can be used to define any resource\r\n  ## supported by CloudFormation: See http://docs.aws.amazon.com/\\\r\n  ## AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html\r\n  resource 'AnEC2Instance' do\r\n    type 'AWS::EC2::Instance'\r\n    property 'AvailabilityZone', 'us-east-1a'\r\n    property 'ImageId', 'ami-76e27e1e' ## Ubuntu 14.04 hvm:ebs\r\n    property 'KeyName', 'test'\r\n    property 'SecurityGroupIds', ['sg-dd733c41', 'sg-dd738df3']\r\n    property 'Tags', [{\r\n      'Key' => 'Name',\r\n      'Value' => 'test-1'\r\n    }]\r\n\r\n    property 'DisableApiTermination', false\r\n  end\r\n\r\n  ## `ec2_instnce` extends `resource`. The following results in JSON\r\n  ## identical to that of Resource[AnEC2Instance]\r\n  ec2_instance 'AnOtherInstance' do\r\n    availability_zone 'us-east-1a'\r\n    image_id 'ami-76e27e1e'\r\n    key_name 'test'\r\n\r\n    security_group 'sg-dd733c41'\r\n    security_group 'sg-dd738df3'\r\n\r\n    tag 'Name', 'test-2'\r\n\r\n    ## All of the methods of the `resource` primative are available in\r\n    ## its children:\r\n    property 'DisableApiTermination', false\r\n  end\r\nend.to_json\r\n```\r\n\r\n### Parameters\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/parameters-section-structure.html\r\n\r\n```ruby\r\nparameter 'InstanceType' do\r\n  type 'String'\r\n  description 'Set the thing\\'s instance flavor'\r\n  default 'm3.medium'\r\n\r\n  allow 'm3.medium'\r\n  allow 'm3.large'\r\n  allow 'm3.xlarge'\r\nend\r\n```\r\n\r\n### Mappings\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/mappings-section-structure.html\r\n\r\n```ruby\r\nmapping 'RegionalAMIs' do\r\n  item 'us-east-1', 'hvm', 'ami-76e27e1e'\r\n  item 'us-west-1', 'hvm', 'ami-d5180890'\r\n  item 'us-east-1', 'pv', 'ami-64e27e0c'\r\n  item 'us-west-1', 'pv', 'ami-c5180880'\r\nend\r\n```\r\n\r\n### Conditions\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html\r\n\r\n```ruby\r\ncondition 'ThisCondition' do\r\n  fn_equals( fn_ref('SomeParameter'), 'value_x' )\r\nend\r\n\r\ncondition 'ThatCondition' do\r\n  fn_or(\r\n    fn_equals( fn_ref('SomeParameter'), 'value_y' ),\r\n    fn_equals( fn_ref('SomeParameter'), 'value_z' )\r\n  )\r\nend\r\n```\r\n\r\n### Resources\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html\r\n\r\n```ruby\r\nresource 'AnInstance' do\r\n  type 'AWS::EC2::Instance'\r\n\r\n  ## Optional condition reference\r\n  condition 'SomeCondition'\r\n\r\n  ## Add Resource Properties\r\n  property 'AvailabilityZone', 'us-east-1a'\r\n  property 'ImageId', 'ami-76e27e1e' ## Ubuntu 14.04 hvm:ebs\r\n  property 'KeyName', 'test'\r\n  ...\r\nend\r\n```\r\n\r\nUsing a condition to set a resource property:\r\n\r\n```ruby\r\nresource 'MySQL' do\r\n  type 'AWS::RDS::DBInstance'\r\n  ...\r\n  property 'Iops', fn_if('ThisCondition', '1000', fn_ref('AWS::NoValue'))\r\n  ...\r\nend\r\n```\r\n\r\n### Outputs\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html\r\n\r\n```ruby\r\noutput 'SomeName' do\r\n  description 'An Important Attribute'\r\n  value get_att('Resource', 'Attribute')\r\n\r\n  ## Optional condition reference\r\n  condition 'SomeCondition'\r\nend\r\n```\r\n\r\n### Intrinsic Functions\r\nhttp://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html\r\n\r\nAll intrinsic functions are available as helper methods:\r\n\r\n * base64(content)\r\n * fn_and(conditions...)\r\n * fn_equals(value_1, value_2)\r\n * fn_if(condition, value_true, value_false)\r\n * fn_not(condition)\r\n * fn_or(conditions...)\r\n * find_in_map(map_name, key_1, key_2)\r\n * get_att(resource, attr_name)\r\n * get_azs(region)\r\n * join(delimiter, values...)\r\n * select(index, objects...)\r\n * fn_ref(resource)\r\n\r\n```ruby\r\nec2_instance \"TestInstanceFoo#{ i }\" do\r\n  image_id find_in_map('RegionalAMIs', fn_ref('AWS::Region'), 'hvm')\r\n  instance_type 'm3.medium'\r\n  key_name find_in_map('RegionalKeys', fn_ref('AWS::Region'), 'test')\r\n  security_group fn_ref('LousySecurityGroup')\r\n  subnet fn_ref(\"TestSubnet\")\r\nend\r\n```\r\n\r\n## Stack Control\r\nThe `Stack` class provides a state wrapper for CloudFormation Stacks. It tracks the state of the managed stack, and creates/updates accordingly. `Stack` is also region-aware, and can be used within a template to define resources that depend upon availability-zones or other region-specific neuances that cannot be represented as maps or require iteration.\r\n\r\n### Class `Convection::Control::Stack`\r\n* `.new(name, template, options = {})`\r\n  * _name_ CloudFormation Stack name\r\n  * _template_ Instance of Convection::Model::Template\r\n  * _options_ - Hash\r\n    * _region_ - AWS region, format `us-east-1`. Default us-east-1\r\n    * _credentials_ - Optional instance of AWS::Credentials. See the [AWS-SDK Documentation](http://docs.aws.amazon.com/sdkforruby/api/frames.html)\r\n    * _parameters_ - Stack parameters, as a `Hash` of `{ key => value }`\r\n    * _tags_ - Stack tags, as a `Hash` of `{ key => value }`\r\n    * _on_failure_ - Create failure action. Default `DELETE`\r\n    * _capabilities_ - See the [AWS-SDK Documentation](http://docs.aws.amazon.com/sdkforruby/api/Aws/CloudFormation/Client.html#create_stack-instance_method)\r\n    * Additional options will be passed directly to `create_stack` and `update_stack`\r\n\r\n* `#status` - Returns the stack status\r\n* `#exist?` - Returns true if the stack exists and is not in a DELETED state\r\n* `#complete?`\r\n* `#rollback?`\r\n* `#fail?`\r\n* `#render` - Populates the provided template with any environment data included in the stack (e.g. availability zones). Returns a `Hash`\r\n* `#to_json` - Render template and transofrm to a pretty-generated JSON `String`\r\n* `#apply` - Renter template and create/update CloudFormation Stack\r\n* `#delete` - Delete CloudFormation Stack\r\n* `#availability_zones(&block)` - Return an array of strings representing the region's availability zones. Provided codeblock will be called for each AZ.\r\n\r\n## Futures\r\n*\r\n\r\n## License\r\n_Copyright (c) 2015 John Manero, Rapid7 LLC._\r\n\r\n```\r\nMIT License\r\n===========\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}